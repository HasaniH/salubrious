// Links:
Research Proposal: https://docs.google.com/document/d/1g_KmAehetCTiDOfC3jLr4us6kJO9t3PDDDHIHLhqyfU/edit?usp=sharing

Frontend/Backend Design: https://docs.google.com/document/d/1MAx02DLOne7PjeXoSk8zFGF4WvH6HKSPeAg2fraP04c/edit?usp=sharing

Github Link: https://github.com/HasaniH/salubrious

// Ideas

Talked with Dr. Ng on 02/19/2018 and showed him my progress thus far. My project will be done in iOS rather than Android as I initially proposed due to the fact that I believe it will be more feasible. 
The application will function for two different type of users. For the owner of a healthy restaurant and also the client searching for a healthy restaurant. 

- The owner of the restaurant will have authentication to add their restaurant to the database. 

- A normal user will not have this access but will have access to query restaurants in a neighborhood.

There are different ways to approach this. For the user I can have a droplist of the neigborhoods to search or I can have the user enter their zip code to search for nearby neighborhoods. 
An advanced way which is ideal for the user is to have the current location feature in the app where the user would allow the app to figure out restaurants nearby them.

Pros of Droplist:
- If a user is not familiar with neighborhoods, they can choose the one which sounds like theirs.
- Easy to use and does not allow a typo

Cons of Droplist:
- May be easier to just search if there are tons of neighborhoods
- User may not recognize or know any of the restaurants

Pros of zip code search:
- If a person does not know their neighborhood, they can search by their zip code
- Simple search

Cons of zip code search:
- Complex way to determine the range of which restaurants are near the zip code
- Some people may know the neighborhood but not the zip code

Pros of current location search:
- Requires no effort for the user

Cons of current location search:
- Difficult to learn how to integeate this feature


// Implementation

I watched many tutorial videos on how to build an iOS app with Firebase Database: 
https://www.youtube.com/watch?v=D0MuaFzoxng
https://www.youtube.com/watch?v=asKXHVUZiIY

This walked me through setting up the initial things to have the app communicate with the database such as: the table view, buttons and communication to the database.
Right now I do not allow the user to enter their personal email and password so I will need to change this. 

(2/25/2018)
Had trouble setting up the login view controller. Spent an hour debugging and I found out that my class for the controller was inheriting a TableViewController and not a view controller which was the reason for the errors. Fixed it and now I have a login view for the app. Will have to work on setting up the feature for logging in a user vs creating a new user.

(3/10/18)
Had trouble sending user email and password to firebase but after many trial and errors I got it to work. Since I am working on getting a functional app working I have set it up in a way easy to manage. User can now sign in and sign out. Next I will need to work on making sure only a owner can add a restaurant. I will do this once I learn to create separate views depending on the user's email. Next steps will be:

- Have app update database correctly with unique ids as child nodes
- Separate view for owner user and regular user
- Read database and show neighborhoods with restaurants in a elegant fashion
- Ng suggested finishing touches

(3/18/18)
I have added unique ids for each restaurant added, that way we can consistently update the database. I have figured out a way to have different views so now I will need to read the data from the database and the app will be very close to complete.

(3/25/18)
After a long 6 hours of work to discover how to debug in xcode with ios and how to iterate through a NS dictionary. I had to redesign the way my database was structured and also figure out how to display the data read from the database to my application. I finally figured out from print statments and debugging how to access the content in from the database. It involved me using to forloops because inside the NSDictionary, the value was another NSDictionary

(4/1/18)
Today I spent a good time figuring out how to create a seperate view for the user that has the same functionality as the owner view just without the add sign. As simple as it may seem, I ran into many errors and figured I would just use the same view but block the user from using the add functionality. 
After this I also added functionality that allowed the owner to see only restaurants that they have added and the user can see all the restaurants. Next I will figure out how to filter, update and delete the data for the client. 

Ideas on how to update:	Allow the owner to click on the restaurant and go to a separate view where they can update the values of that restaurant and it will update the database. Upon this, they will be directed back to the last view and there will also need to be a button that allows them to go back to the last view.

Ideas on how to delete:	Look into how to do the swipe/delete function and just remove it from the database from this. 

Ideas on how to filter:	Collect a list of all the neighborhoods and have a button with different neighborhoods and when clicked, displays the list of the restaurants in that neighborhood.